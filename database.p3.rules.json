{
  "rules": {
    "data": {
      ".read": "auth.uid !== null && ((query.limitToFirst !== null && query.limitToFirst <= 1000) || (query.limitToLast !== null && query.limitToLast <= 1000))",
      ".indexOn": [
        "groupId"
      ],
      "$dataId": {
        ".write": "auth.uid !== null && $dataId.length === 20 && !data.exists() && newData.exists()",
        ".validate": "newData.hasChildren(['userId', 'groupId', 'timestamp', 'type']) && (newData.hasChild('number') || newData.hasChild('string'))",
        "userId": {
          ".validate": "newData.val() === auth.uid"
        },
        "groupId": {
          ".validate": "newData.isNumber() && ((auth.token !== null && auth.token.iot !== null && auth.token.iot === 1 && newData.val() >= 1 && newData.val() <= 29) || (newData.val() >= 30 && newData.val() <= 41 && newData.parent().child('type').val() === 'string') || (auth.token.fortytwo === 1 && newData.val() === 42) || (newData.val() >= 43 && newData.val() <= 60))"
        },
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() === now"
        },
        "type": {
          ".validate": "newData.isString() && (newData.val() === 'string' || newData.val() === 'number')"
        },
        "number": {
          ".validate": "newData.parent().child('type').val() === 'number' && newData.isNumber() && newData.val() >= -10240 && newData.val() <= 10240"
        },
        "string": {
          ".validate": "newData.parent().child('type').val() === 'string' && newData.isString() && newData.val().length <= 100"
        },
        "$other": {
          ".validate": false
        }
      }
    }
  }
}